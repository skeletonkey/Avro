/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.jundy.client;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Rules extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 9191851519804753075L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Rules\",\"namespace\":\"com.jundy.client\",\"fields\":[{\"name\":\"uuid\",\"type\":\"string\",\"doc\":\"UUID for client that rules belong to\",\"default\":\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"},{\"name\":\"Channel\",\"type\":{\"type\":\"enum\",\"name\":\"Channel\",\"doc\":\"Category that the client is allows to transact on\",\"symbols\":[\"INTERNET\",\"IVR\",\"PHONE\"],\"default\":\"INTERNET\"}},{\"name\":\"Market\",\"type\":{\"type\":\"enum\",\"name\":\"Market\",\"doc\":\"Market which client is allowed to operate in\",\"symbols\":[\"UNITEDSTATES\",\"AUSTRALIA\",\"CANADA\",\"GERMANY\",\"GREATBRITAIN\",\"IRELAND\",\"MEXICO\",\"NEWZEALAND\",\"NORTHIRELAND\",\"SPAIN\"],\"default\":\"UNITEDSTATES\"}},{\"name\":\"feature_set\",\"type\":[\"null\",\"string\"],\"doc\":\"The human readable client name/id\",\"default\":null},{\"name\":\"RuleSet\",\"type\":{\"type\":\"record\",\"name\":\"RuleSet\",\"fields\":[{\"name\":\"enable_insurance\",\"type\":\"boolean\",\"doc\":\"Flag indicating if client is allowed to offer insurance\",\"default\":false},{\"name\":\"require_delivery_method_to_complete_order\",\"type\":\"boolean\",\"doc\":\"Flag indicating if client is required to provided a delivery method to complete an order\",\"default\":false},{\"name\":\"shopping_cart_ttl\",\"type\":\"int\",\"doc\":\"Max time that a cart is allowed to exists.\",\"default\":600},{\"name\":\"configurable_customer_info_obj_fields\",\"type\":[\"null\",\"string\"],\"doc\":\"What customer information fields are required for customer data to be considered 'compelte'\",\"default\":null}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Rules> ENCODER =
      new BinaryMessageEncoder<Rules>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Rules> DECODER =
      new BinaryMessageDecoder<Rules>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Rules> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Rules> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Rules>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Rules to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Rules from a ByteBuffer. */
  public static Rules fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** UUID for client that rules belong to */
  @Deprecated public java.lang.CharSequence uuid;
  @Deprecated public com.jundy.client.Channel Channel;
  @Deprecated public com.jundy.client.Market Market;
  /** The human readable client name/id */
  @Deprecated public java.lang.CharSequence feature_set;
  @Deprecated public com.jundy.client.RuleSet RuleSet;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Rules() {}

  /**
   * All-args constructor.
   * @param uuid UUID for client that rules belong to
   * @param Channel The new value for Channel
   * @param Market The new value for Market
   * @param feature_set The human readable client name/id
   * @param RuleSet The new value for RuleSet
   */
  public Rules(java.lang.CharSequence uuid, com.jundy.client.Channel Channel, com.jundy.client.Market Market, java.lang.CharSequence feature_set, com.jundy.client.RuleSet RuleSet) {
    this.uuid = uuid;
    this.Channel = Channel;
    this.Market = Market;
    this.feature_set = feature_set;
    this.RuleSet = RuleSet;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uuid;
    case 1: return Channel;
    case 2: return Market;
    case 3: return feature_set;
    case 4: return RuleSet;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uuid = (java.lang.CharSequence)value$; break;
    case 1: Channel = (com.jundy.client.Channel)value$; break;
    case 2: Market = (com.jundy.client.Market)value$; break;
    case 3: feature_set = (java.lang.CharSequence)value$; break;
    case 4: RuleSet = (com.jundy.client.RuleSet)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return UUID for client that rules belong to
   */
  public java.lang.CharSequence getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * UUID for client that rules belong to
   * @param value the value to set.
   */
  public void setUuid(java.lang.CharSequence value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'Channel' field.
   * @return The value of the 'Channel' field.
   */
  public com.jundy.client.Channel getChannel() {
    return Channel;
  }

  /**
   * Sets the value of the 'Channel' field.
   * @param value the value to set.
   */
  public void setChannel(com.jundy.client.Channel value) {
    this.Channel = value;
  }

  /**
   * Gets the value of the 'Market' field.
   * @return The value of the 'Market' field.
   */
  public com.jundy.client.Market getMarket() {
    return Market;
  }

  /**
   * Sets the value of the 'Market' field.
   * @param value the value to set.
   */
  public void setMarket(com.jundy.client.Market value) {
    this.Market = value;
  }

  /**
   * Gets the value of the 'feature_set' field.
   * @return The human readable client name/id
   */
  public java.lang.CharSequence getFeatureSet() {
    return feature_set;
  }

  /**
   * Sets the value of the 'feature_set' field.
   * The human readable client name/id
   * @param value the value to set.
   */
  public void setFeatureSet(java.lang.CharSequence value) {
    this.feature_set = value;
  }

  /**
   * Gets the value of the 'RuleSet' field.
   * @return The value of the 'RuleSet' field.
   */
  public com.jundy.client.RuleSet getRuleSet() {
    return RuleSet;
  }

  /**
   * Sets the value of the 'RuleSet' field.
   * @param value the value to set.
   */
  public void setRuleSet(com.jundy.client.RuleSet value) {
    this.RuleSet = value;
  }

  /**
   * Creates a new Rules RecordBuilder.
   * @return A new Rules RecordBuilder
   */
  public static com.jundy.client.Rules.Builder newBuilder() {
    return new com.jundy.client.Rules.Builder();
  }

  /**
   * Creates a new Rules RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Rules RecordBuilder
   */
  public static com.jundy.client.Rules.Builder newBuilder(com.jundy.client.Rules.Builder other) {
    return new com.jundy.client.Rules.Builder(other);
  }

  /**
   * Creates a new Rules RecordBuilder by copying an existing Rules instance.
   * @param other The existing instance to copy.
   * @return A new Rules RecordBuilder
   */
  public static com.jundy.client.Rules.Builder newBuilder(com.jundy.client.Rules other) {
    return new com.jundy.client.Rules.Builder(other);
  }

  /**
   * RecordBuilder for Rules instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Rules>
    implements org.apache.avro.data.RecordBuilder<Rules> {

    /** UUID for client that rules belong to */
    private java.lang.CharSequence uuid;
    private com.jundy.client.Channel Channel;
    private com.jundy.client.Market Market;
    /** The human readable client name/id */
    private java.lang.CharSequence feature_set;
    private com.jundy.client.RuleSet RuleSet;
    private com.jundy.client.RuleSet.Builder RuleSetBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.jundy.client.Rules.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Channel)) {
        this.Channel = data().deepCopy(fields()[1].schema(), other.Channel);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Market)) {
        this.Market = data().deepCopy(fields()[2].schema(), other.Market);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.feature_set)) {
        this.feature_set = data().deepCopy(fields()[3].schema(), other.feature_set);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.RuleSet)) {
        this.RuleSet = data().deepCopy(fields()[4].schema(), other.RuleSet);
        fieldSetFlags()[4] = true;
      }
      if (other.hasRuleSetBuilder()) {
        this.RuleSetBuilder = com.jundy.client.RuleSet.newBuilder(other.getRuleSetBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Rules instance
     * @param other The existing instance to copy.
     */
    private Builder(com.jundy.client.Rules other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Channel)) {
        this.Channel = data().deepCopy(fields()[1].schema(), other.Channel);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Market)) {
        this.Market = data().deepCopy(fields()[2].schema(), other.Market);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.feature_set)) {
        this.feature_set = data().deepCopy(fields()[3].schema(), other.feature_set);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.RuleSet)) {
        this.RuleSet = data().deepCopy(fields()[4].schema(), other.RuleSet);
        fieldSetFlags()[4] = true;
      }
      this.RuleSetBuilder = null;
    }

    /**
      * Gets the value of the 'uuid' field.
      * UUID for client that rules belong to
      * @return The value.
      */
    public java.lang.CharSequence getUuid() {
      return uuid;
    }

    /**
      * Sets the value of the 'uuid' field.
      * UUID for client that rules belong to
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public com.jundy.client.Rules.Builder setUuid(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * UUID for client that rules belong to
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uuid' field.
      * UUID for client that rules belong to
      * @return This builder.
      */
    public com.jundy.client.Rules.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'Channel' field.
      * @return The value.
      */
    public com.jundy.client.Channel getChannel() {
      return Channel;
    }

    /**
      * Sets the value of the 'Channel' field.
      * @param value The value of 'Channel'.
      * @return This builder.
      */
    public com.jundy.client.Rules.Builder setChannel(com.jundy.client.Channel value) {
      validate(fields()[1], value);
      this.Channel = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'Channel' field has been set.
      * @return True if the 'Channel' field has been set, false otherwise.
      */
    public boolean hasChannel() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'Channel' field.
      * @return This builder.
      */
    public com.jundy.client.Rules.Builder clearChannel() {
      Channel = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'Market' field.
      * @return The value.
      */
    public com.jundy.client.Market getMarket() {
      return Market;
    }

    /**
      * Sets the value of the 'Market' field.
      * @param value The value of 'Market'.
      * @return This builder.
      */
    public com.jundy.client.Rules.Builder setMarket(com.jundy.client.Market value) {
      validate(fields()[2], value);
      this.Market = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'Market' field has been set.
      * @return True if the 'Market' field has been set, false otherwise.
      */
    public boolean hasMarket() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'Market' field.
      * @return This builder.
      */
    public com.jundy.client.Rules.Builder clearMarket() {
      Market = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'feature_set' field.
      * The human readable client name/id
      * @return The value.
      */
    public java.lang.CharSequence getFeatureSet() {
      return feature_set;
    }

    /**
      * Sets the value of the 'feature_set' field.
      * The human readable client name/id
      * @param value The value of 'feature_set'.
      * @return This builder.
      */
    public com.jundy.client.Rules.Builder setFeatureSet(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.feature_set = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'feature_set' field has been set.
      * The human readable client name/id
      * @return True if the 'feature_set' field has been set, false otherwise.
      */
    public boolean hasFeatureSet() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'feature_set' field.
      * The human readable client name/id
      * @return This builder.
      */
    public com.jundy.client.Rules.Builder clearFeatureSet() {
      feature_set = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'RuleSet' field.
      * @return The value.
      */
    public com.jundy.client.RuleSet getRuleSet() {
      return RuleSet;
    }

    /**
      * Sets the value of the 'RuleSet' field.
      * @param value The value of 'RuleSet'.
      * @return This builder.
      */
    public com.jundy.client.Rules.Builder setRuleSet(com.jundy.client.RuleSet value) {
      validate(fields()[4], value);
      this.RuleSetBuilder = null;
      this.RuleSet = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'RuleSet' field has been set.
      * @return True if the 'RuleSet' field has been set, false otherwise.
      */
    public boolean hasRuleSet() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'RuleSet' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.jundy.client.RuleSet.Builder getRuleSetBuilder() {
      if (RuleSetBuilder == null) {
        if (hasRuleSet()) {
          setRuleSetBuilder(com.jundy.client.RuleSet.newBuilder(RuleSet));
        } else {
          setRuleSetBuilder(com.jundy.client.RuleSet.newBuilder());
        }
      }
      return RuleSetBuilder;
    }

    /**
     * Sets the Builder instance for the 'RuleSet' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.jundy.client.Rules.Builder setRuleSetBuilder(com.jundy.client.RuleSet.Builder value) {
      clearRuleSet();
      RuleSetBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'RuleSet' field has an active Builder instance
     * @return True if the 'RuleSet' field has an active Builder instance
     */
    public boolean hasRuleSetBuilder() {
      return RuleSetBuilder != null;
    }

    /**
      * Clears the value of the 'RuleSet' field.
      * @return This builder.
      */
    public com.jundy.client.Rules.Builder clearRuleSet() {
      RuleSet = null;
      RuleSetBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Rules build() {
      try {
        Rules record = new Rules();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.Channel = fieldSetFlags()[1] ? this.Channel : (com.jundy.client.Channel) defaultValue(fields()[1]);
        record.Market = fieldSetFlags()[2] ? this.Market : (com.jundy.client.Market) defaultValue(fields()[2]);
        record.feature_set = fieldSetFlags()[3] ? this.feature_set : (java.lang.CharSequence) defaultValue(fields()[3]);
        if (RuleSetBuilder != null) {
          record.RuleSet = this.RuleSetBuilder.build();
        } else {
          record.RuleSet = fieldSetFlags()[4] ? this.RuleSet : (com.jundy.client.RuleSet) defaultValue(fields()[4]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Rules>
    WRITER$ = (org.apache.avro.io.DatumWriter<Rules>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Rules>
    READER$ = (org.apache.avro.io.DatumReader<Rules>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
